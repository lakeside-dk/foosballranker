<!-- This is a template Ant file for a very basic Google AppEngine project -->

<project xmlns:ivy="antlib:org.apache.ivy.ant" name="foosballranker" default="war">

    <property file="userproperties/${user.name}.properties" />
    <property file="userproperties/default.properties" />

    <fail unless="appengine.sdk" message="Please define the appengine.sdk property to point to your SDK directory" />
    <available property="appengine.available" file="${appengine.sdk}/config/user/ant-macros.xml"/>
    <fail unless="appengine.available" message="No appengine sdk found at ${appengine.sdk}" />


  <!-- Pick up the Ant macros and taskdefs for App Engine -->
  <import file="${appengine.sdk}/config/user/ant-macros.xml"/>


  <target name="war" depends="enhance"
          description="Assemble the application directory">
    <mkdir dir="${war.dir}/WEB-INF"/>
    <copy todir="${war.dir}">
      <fileset dir="src/main/webapp">
        <include name="*.html"/>
        <include name="*.ico"/>
      </fileset>
    </copy>
    <copy todir="${war.dir}/partials">
      <fileset dir="src/main/webapp/partials">
        <include name="**"/>
      </fileset>
    </copy>
    <copy todir="${war.dir}/test">
      <fileset dir="src/main/webapp/test">
        <include name="**"/>
      </fileset>
    </copy>
    <copy todir="${war.dir}/images">
      <fileset dir="src/main/webapp/images">
        <include name="**"/>
      </fileset>
    </copy>
    <copy todir="${war.dir}/js">
      <fileset dir="src/main/webapp/js">
        <include name="**"/>
      </fileset>
    </copy>
    <copy todir="${war.dir}/lib">
      <fileset dir="src/main/webapp/lib">
        <include name="**"/>
      </fileset>
    </copy>
    <copy todir="${war.dir}/css">
      <fileset dir="src/main/webapp/css">
        <include name="**"/>
      </fileset>
    </copy>
    <copy todir="${war.dir}/WEB-INF">
      <fileset dir="src/main/webapp/WEB-INF">
        <include name="*.xml"/>
      </fileset>
    </copy>
    <enhance_war war="${war.dir}"/>
  </target>

  <!--<target name="enhance" depends="compile, dart2js"-->
  <target name="enhance" depends="compile"
          description="Enhance the classes after compilation">
    <enhance_war war="${war.dir}"/>
  </target>

  <target name="dart2js-disabled" description="Compile the dart code to js">
  <!--<target name="dart2js" description="Compile the dart code to js">-->
      <mkdir dir="${war.dir}/js"/>
      <property name="dart2js" location="${dart.sdk}/bin/dart2js"/>
      <property name="file" location="src/main/dart/playerKamp.dart"/>
      <property name="outputfile" location="${war.dir}/js/playerKamp.js"/>

      <exec failonerror="true" executable="${dart2js}">
          <arg value="--out=${outputfile}"/>
          <arg value="${file}"/>
      </exec>
  </target>

  <target name="compile"
          description="Compile the application servlet code">
    <mkdir dir="${war.dir}/WEB-INF/classes"/>
    <mkdir dir="${war.dir}/WEB-INF/lib"/>
    <!--<javac srcdir="src" destdir="${war.dir}/WEB-INF/classes">-->
    <javac srcdir="src/main/java" destdir="${war.dir}/WEB-INF/classes" debug="on" debuglevel="lines,vars,source">
      <classpath>
        <fileset dir="${appengine.sdk}/lib">
          <include name="appengine-remote-api.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/impl">
          <include name="appengine-api.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/user">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/user/orm">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/shared">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="lib">
          <exclude name="*sources.jar"/>
        </fileset>
      </classpath>
    </javac>
    <copy todir="${war.dir}/WEB-INF/lib"
          flatten="true">
      <fileset dir="${appengine.sdk}/lib/user">
        <include name="**/*.jar" />
      </fileset>
      <fileset dir="lib">
        <exclude name="*-sources.jar" />
        <exclude name="*-javadoc.jar" />
      </fileset>
    </copy>
    <copy todir="${war.dir}/WEB-INF/classes">
      <fileset dir="src/main/java">
        <include name="templates/**/*.ftl" />
      </fileset>
    </copy>
  </target>

  <target name="clean"
          description="Force a clean slate to rebuild">
    <delete dir="${war.dir}"/>
  </target>

  <target name="runserver" depends="war"
          description="Run the dev_appserver">
    <dev_appserver war="${war.dir}" port="${http.port}"/>
  </target>

  <target name="dev_appserver" depends="runserver"/>

  <target name="debug" depends="war" 
          description="Launches dev_appserver with remote debugging enabled">
    <echo message="Launching dev_appserver on Web port ${http.port}, Java remote debug port ${debug.port}"/>
    <dev_appserver war="${war.dir}" port="${http.port}">
      <options>
        <arg value="--jvm_flag=-Xdebug"/>
        <arg value="--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=${debug.port}"/>
      </options>
    </dev_appserver>
  </target>

  <target name="update" depends="war" 
          description="Uploads the application, including indexes">
    <appcfg action="update" war="${war.dir}"/>
  </target>

  <target name="update_indexes" depends="war" 
          description="Uploads only the application's indexes">
    <appcfg action="update_indexes" war="${war.dir}"/>
  </target>

  <target name="rollback" depends="war" 
          description="Rolls back any in-progress application update">
    <appcfg action="rollback" war="${war.dir}"/>
  </target>

  <target name="request_logs" 
          description="Downloads the application's logs">
    <appcfg action="request_logs" war="${war.dir}">
      <options>
        <arg value="--num_days=${log.days}"/>
      </options>
      <args>
        <arg value="${log.file}"/>
      </args>
    </appcfg>
  </target>

    <target name="resolve" description="--> retrieve dependencies with ivy">
        <ivy:retrieve />
    </target>
</project>
